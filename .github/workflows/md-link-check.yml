name: Markdown Link Check

on:
  pull_request_target:
    paths:
    - '**/**.md'

permissions:
  contents: read
  pull-requests: write

jobs:
  link-check:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.show.outputs.broken-links }}
    steps:
    - name: Setup Action
      uses: actions/checkout@v3
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Install dependencies
      run: npm install -g markdown-link-check
    - name: Changed Files Exporter
      if: github.event_name == 'pull_request_target'
      id: files
      # This uses the SHA for 4.0.0 - https://github.com/umani/changed-files/releases/tag/v4.0.0
      uses: umani/changed-files@96d5fd702a6479d573287ef07381ad59acc390ed
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: PR link check
      if: github.event_name == 'pull_request_target'
      env:
        FILES: '${{ steps.files.outputs.files_updated }} ${{ steps.files.outputs.files_created }}'
      run: |
        echo "The Following files were changed or created:"
        echo $FILES
        touch log err
        ls -lah
        for FILE in $FILES; do echo $FILE | grep -q .*\.md\$ && markdown-link-check -q -v -c .github/workflows/configs/markdown-link-check-config.json $FILE 1>> log 2>> err; done
        if grep -q  "ERROR:" err ; then exit 1 ; else echo -e "No broken links found."; fi
        ls -lah
        echo $(cat log)
        echo $(cat err)
    - name: Repository link check
      if: github.event_name == 'workflow_dispatch'
      run: |
        touch log err
        find . -name \*.md -exec markdown-link-check -q -v --config .github/configs/markdown-link-check-config.json {} 1>> log 2>> err \;
        if grep -q  "ERROR:" err ; then exit 1 ; else echo -e "No broken links found."; fi
        echo $(cat log)
        echo $(cat err)
    - name: Show broken links
      id: show
      if: failure()
      run: |
        cat log | awk -v RS="FILE:" 'match($0, /(\S*\.md).*\[âœ–\].*(\d*\slinks\schecked\.)(.*)/, arr ) { print "FILE:"arr[1] arr[3] > "brokenlinks.txt"}'
        cat brokenlinks.txt
        echo "broken-links=" >> $GITHUB_OUTPUT
        echo "$(cat brokenlinks.txt)" >> $GITHUB_OUTPUT
        rm -f err log
    - name: Upload list of broken links
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: broken-links
        path: brokenlinks.txt
    - name: Comment Linting Issues
      if: failure()
      uses: ./.github/actions/comment
      with:
        pull_request_number: ${{ github.event.number }}
